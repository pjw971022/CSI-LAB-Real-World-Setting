env_name: rlbench
episode_length: 1
use_server: true
use_oracle_plan: true
use_oracle_instruction: false
use_sembot: false
save_pcd: false

task_random: true
server_ip: "tcp://10.201.135.230:8887"
interative_agent:
  api_mode: google
  chat_with: human
  image_path: /home/jinwoo/workspace/Sembot/sembot/src/visualizations/obs
  is_black_box: true
  openai_settings:
    model: gpt-4-1106-preview
    temperature: 1
    max_tokens: 2049
  google_settings:
    model: gemini-1.0-pro-latest
    temperature: 1
    max_tokens: 2049
  prompt:
    system: |
      You are a participant in a game where you plan robot actions to execute instructions. You must conservatively estimate your confidence for each action and can request information necessary to ensure the success of the action. Additionally, you can receive feedback on actions.
    robot: | 
      asdasd
    rule: |
      You must generate the following steps as [Action], [Confidence], and [Question]. [Action] is the action you need to perform next. [Confidence] is your level of certainty about the [Action] you have inferred. [Question] is an inquiry needed to plan your [Action]. Questions can be 1) asking for additional conditions necessary for the success of the action, and 2) checking whether the planned action is appropriate for manipulating an object in the current situation. If [Confidence] is high, you carry out the [Action]; if it is low, you ask a question to the response module. You receive an [Answer] in response to your question. If there are issues with the action, the cause will be provided as [Feedback].
    fewshot: |
      Here are some examples:
      [Action] open gripper
      [Confidence] 70%
      [Question] Should the gripper be opened when operating the remote for a Samsung TV?

      [Action] rotate the drawer
      [Confidence] 40%
      [Question] What is the action to open a drawer that looks like this?

      [Action] back to default pose
      [Confidence] 95%
      [Question] Will returning to the default pose damage the current object?

      [Action] grasp the oven handle
      [Confidence] 30%
      [Question] What is the suitable approach direction to grasp the oven handle?

      [Action] grasp the bottle cap
      [Confidence] 20%
      [Question] What is the position to reach to grasp a 500ml Evian plastic bottle?

      [Action] move toward the iphone
      [Confidence] 20%
      [Question] What is the correct starting direction to go towards the iPhone?

      [Action] set up the fork
      [Confidence] 60%
      [Question] How many cm from the plate should the fork be placed?

      [Action] push the button
      [Confidence] 60%
      [Question] How many cm should this type of button be pressed?

      [Action] turn close the beer
      [Confidence] 50%
      [Question] What direction and angle should this beer be turned to close it?
planner:
  stop_threshold: 0.001
  savgol_polyorder: 3
  savgol_window_size: 20
  obstacle_map_weight: 1
  max_steps: 300
  obstacle_map_gaussian_sigma: 10
  target_map_weight: 2
  stop_criteria: no_nearby_equal
  target_spacing: 1
  max_curvature: 3
  pushing_skip_per_k: 5

controller:
  horizon_length: 1
  num_samples: 10000
  ee_local: temperature
  ee_local_radius: 0.15

visualizer:
  save_dir: ./visualizations
  quality: low
  map_size: 100

lmp_config:
  env:
    map_size: 100
    num_waypoints_per_plan: 10000  # set to a large number since we only do open loop for sim
    max_plan_iter: 1
    visualize: false
  lmps:
    planner:
      prompt_fname: planner_prompt
      model: gpt-4
      max_tokens: 512
      temperature: 0
      query_prefix: '# Query: '
      query_suffix: '.'
      stop:
        - '# Query: '
        - 'objects = '
      maintain_session: False
      include_context: True
      has_return: False
      return_val_name: ret_val
      load_cache: True
    composer:
      prompt_fname: composer_prompt
      model: gpt-4
      max_tokens: 512
      temperature: 0
      query_prefix: '# Query: '
      query_suffix: '.'
      stop:
        - '# Query: '
        - 'objects ='
      maintain_session: False
      include_context: False
      has_return: True
      return_val_name: ret_val
      load_cache: True
    parse_query_obj:
      prompt_fname: parse_query_obj_prompt
      model: gpt-4
      max_tokens: 512
      temperature: 0
      query_prefix: '# Query: '
      query_suffix: '.'
      stop:
        - '# Query: '
        - 'objects ='
      maintain_session: False
      include_context: True
      has_return: True
      return_val_name: ret_val
      load_cache: True
    get_affordance_map:
      prompt_fname: get_affordance_map_prompt
      model: gpt-4
      max_tokens: 512
      temperature: 0
      query_prefix: '# Query: '
      query_suffix: '.'
      stop:
        - '# Query: '
        - 'objects ='
      maintain_session: False
      include_context: False
      has_return: True
      return_val_name: ret_val
      load_cache: True
    get_avoidance_map:
      prompt_fname: get_avoidance_map_prompt
      model: gpt-4
      max_tokens: 512
      temperature: 0
      query_prefix: '# Query: '
      query_suffix: '.'
      stop:
        - '# Query: '
        - 'objects ='
      maintain_session: False
      include_context: False
      has_return: True
      return_val_name: ret_val
      load_cache: True
    get_velocity_map:
      prompt_fname: get_velocity_map_prompt
      model: gpt-4
      max_tokens: 512
      temperature: 0
      query_prefix: '# Query: '
      query_suffix: '.'
      stop:
        - '# Query: '
        - 'objects ='
      maintain_session: False
      include_context: False
      has_return: True
      return_val_name: ret_val
      load_cache: True
    get_rotation_map:
      prompt_fname: get_rotation_map_prompt
      model: gpt-4
      max_tokens: 512
      temperature: 0
      query_prefix: '# Query: '
      query_suffix: '.'
      stop:
        - '# Query: '
        - 'objects ='
      maintain_session: False
      include_context: False
      has_return: True
      return_val_name: ret_val
      load_cache: True
    get_gripper_map:
      prompt_fname: get_gripper_map_prompt
      model: gpt-4
      max_tokens: 512
      temperature: 0
      query_prefix: '# Query: '
      query_suffix: '.'
      stop:
        - '# Query: '
        - 'objects ='
      maintain_session: False
      include_context: False
      has_return: True
      return_val_name: ret_val
      load_cache: True